AWSTemplateFormatVersion: 2010-09-09
Description: instance stack
Parameters:
  InstanceType:
    AllowedValues:
    - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.micro
    Description: WebServer EC2 instance type
    Type: String
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
    Default: keypair-first
  SubnetId:
    Type: String
  SecurityGroupId:
    Type: String
  ENV:
    Type: String
  FromParamterStore:
    Type : AWS::SSM::Parameter::Value<String>
    Default: mySecret
Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-2:
      HVM64: ami-0f7919c33c90f5b58
      HVMG2: ami-e998ea83

Conditions:
  CreateLargeRootDisk: !Equals [ !Sub '${ENV}', 'prod' ]

Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', !FindInMap [AWSInstanceType2Arch, !Ref InstanceType, Arch]]
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      BlockDeviceMappings: 
      - DeviceName: "/dev/xvda"
        Ebs: 
          VolumeSize: !If [CreateLargeRootDisk, 20, 10]
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        GroupSet: 
          - !Sub '${SecurityGroupId}'
        SubnetId: !Sub '${SubnetId}'
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash -xe
           yum update -y
           yum install -y httpd
           cat <<EOF > /var/www/html/index.html
           <!doctype html><html><body><h1>${FromParamterStore}</h1></body></html>
           EOF
           apachectl start
Outputs:
  PublicIP:
    Description: EC2 public IP
    Value: !GetAtt WebServer.PublicIp